[
  {
    "question": "Show the number of nodes created per day",
    "query": "SELECT n.node_name,\n       COUNT(*) AS num_nodes,\n       DATE_TRUNC('day', n.created_at) AS creation_date\nFROM nodedata n\nGROUP BY n.node_name,\n         creation_date\nORDER BY creation_date NULLS LAST;"
  },
  {
    "question": "How many pods have current state running?",
    "query": "SELECT COUNT(*)\nFROM poddata pd\nWHERE LOWER(pd.state) = 'running';"
  },
  {
    "question": "How many nodes are there per cluster?",
    "query": "SELECT n.cluster_name,\n       COUNT(n.node_id) AS node_count\nFROM nodedata n\nGROUP BY n.cluster_name\nORDER BY n.cluster_name NULLS LAST;"
  },
  {
    "question": "What are the account id of the products that have category as 'COMPUTE-RI' and subcategory as 'H200-RI' in the month of April 2025?",
    "query": "SELECT cd.account_id\nFROM costs_data cd\nWHERE cd.category = 'COMPUTE-RI'\n  AND cd.subcategory = 'H200-RI'\n  AND EXTRACT(MONTH\n              FROM cd.date_day) = 4\n  AND EXTRACT(YEAR\n              FROM cd.date_day) = 2025;"
  },
  {
    "question": "Show me the clusters that have more than 5 nodes, grouped by platform",
    "query": "SELECT pd.cluster_name,\n       COUNT(pd.node_name) AS node_count,\n       pd.platform\nFROM poddata pd\nGROUP BY pd.cluster_name,\n         pd.platform\nHAVING COUNT(pd.node_name) > 5\nORDER BY pd.cluster_name,\n         pd.platform NULLS LAST;"
  },
  {
    "question": "From how many projects did the last time we fetched metadata lies in last month",
    "query": "SELECT COUNT(DISTINCT pd.project_id)\nFROM projectdata pd\nWHERE pd.last_fetched_time >= DATE_TRUNC('month', CURRENT_TIMESTAMP) - INTERVAL '1 month'\n  AND pd.last_fetched_time < DATE_TRUNC('month', CURRENT_TIMESTAMP);"
  },
  {
    "question": "What is the distribution of instance types?",
    "query": "SELECT n.instance_type,\n       COUNT(*) AS COUNT\nFROM nodedata n\nGROUP BY n.instance_type\nORDER BY COUNT DESC NULLS LAST;"
  },
  {
    "question": "What are all the nodes in the 'sensei-eks01-prod-cluster' cluster?",
    "query": "SELECT DISTINCT n.nodename FROM nodedata n WHERE n.clustername ='sensei-eks01-prod-cluster' ORDER BY n.nodename NULLS LAST;"
  },
  {
    "question": "How many pods are currently in the 'Running' state?",
    "query": "SELECT COUNT(*) FROM poddata WHERE state = 'Running'"
  },
  {
    "question": "List all pods that have terminated in the last 24 hours.",
    "query": "SELECT pd.pod_id,\n       pd.name,\n       pd.namespace,\n       pd.project_id,\n       pd.initiative_id,\n       pd.cluster_name,\n       pd.start_time,\n       pd.end_time,\n       pd.is_terminated\nFROM poddata pd\nWHERE pd.is_terminated = TRUE\n  AND pd.end_time >= (CURRENT_TIMESTAMP - INTERVAL '24 hours')\nORDER BY pd.end_time DESC NULLS LAST;"
  },
  {
    "question": "Which pods have GPU utilization above 80%?",
    "query": "SELECT m.pod_id,\n       m.pod_name,\n       m.cluster_name,\n       m.project_id,\n       m.initiative_name,\n       m.metric_timestamp,\n       m.dcgm_fi_dev_gpu_util\nFROM metrics m\nWHERE m.dcgm_fi_dev_gpu_util > 80;"
  },
  {
    "question": "Identify pods with memory usage exceeding 90.",
    "query": "SELECT pd.pod_id,\n       pd.name,\n       pd.memory_mb\nFROM poddata pd\nWHERE pd.memory_mb > 90;"
  },
  {
    "question": "How many pods were initiated by each project?",
    "query": "SELECT pd.project_id,\n       COUNT(pd.pod_id) AS number_of_pods\nFROM poddata pd\nGROUP BY pd.project_id\nORDER BY number_of_pods DESC NULLS LAST;"
  },
  {
    "question": "List pods that have not reported metrics in the last 2 hours.",
    "query": "SELECT pd.pod_id,\n       pd.name,\n       pd.last_metric_received_time\nFROM poddata pd\nWHERE pd.last_metric_received_time < CURRENT_TIMESTAMP - INTERVAL '2 hours'\nORDER BY pd.last_metric_received_time NULLS LAST;"
  },
  {
    "question": "Which pods have been running for more than 24 hours?",
    "query": "SELECT pd.pod_id,\n       pd.name,\n       pd.start_time\nFROM poddata pd\nWHERE pd.start_time < CURRENT_TIMESTAMP - INTERVAL '24 hours'\n  AND pd.is_terminated = FALSE;"
  },
  {
    "question": "What is the distribution of pod states across all clusters?",
    "query": "SELECT pd.cluster_name,\n       pd.state,\n       COUNT(*) AS count\nFROM poddata pd\nGROUP BY pd.cluster_name,\n         pd.state\nORDER BY pd.cluster_name,\n         pd.state NULLS LAST;"
  },
  {
    "question": "Identify pods with the highest GPU count.",
    "query": "SELECT pd.pod_id,\n       pd.gpu_count\nFROM poddata pd\nORDER BY pd.gpu_count DESC NULLS LAST\nLIMIT 1;"
  },
  {
    "question": "How many nodes exist in each cluster?",
    "query": "SELECT n.cluster_name,\n       COUNT(n.node_id) AS node_count\nFROM nodedata n\nGROUP BY n.cluster_name\nORDER BY n.cluster_name NULLS LAST;"
  },
  {
    "question": "List nodes created per day over the last month.",
    "query": "SELECT date_trunc('day', n.created_at) AS day,\n       COUNT(*) AS num_nodes\nFROM nodedata n\nWHERE n.created_at >= (CURRENT_DATE - interval '1 month')\nGROUP BY day\nORDER BY day NULLS LAST;"
  },
  {
    "question": "What is the distribution of node instance types?",
    "query": "SELECT n.instance_type,\n       COUNT(*) AS COUNT\nFROM nodedata n\nGROUP BY n.instance_type\nORDER BY COUNT DESC NULLS LAST;"
  },
  {
    "question": "List all clusters with more than 5 nodes.",
    "query": "SELECT n.cluster_name\nFROM nodedata n\nGROUP BY n.cluster_name\nHAVING COUNT(n.node_id) > 5\nORDER BY n.cluster_name NULLS LAST;"
  },
  {
    "question": "Which 5 clusters have the highest number of running pods?",
    "query": "WITH running_pods AS\n  (SELECT pd.cluster_name,\n          COUNT(pd.pod_id) AS num_pods\n   FROM poddata pd\n   WHERE pd.is_terminated = FALSE\n   GROUP BY pd.cluster_name)\nSELECT rp.cluster_name,\n       rp.num_pods\nFROM running_pods rp\nORDER BY rp.num_pods DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "Identify cluster with the most GPU resources.",
    "query": "SELECT pd.cluster_name,\n       SUM(pd.gpu_count) AS total_gpu_count\nFROM poddata pd\nGROUP BY pd.cluster_name\nORDER BY total_gpu_count DESC NULLS LAST\nLIMIT 1;"
  },
  {
    "question": "What is the average GPU utilization per cluster?",
    "query": "SELECT m.cluster_name,\n       AVG(m.dcgm_fi_dev_gpu_util) AS average_gpu_utilization\nFROM metrics m\nGROUP BY m.cluster_name;"
  },
  {
    "question": "How many clusters are associated with each platform?",
    "query": "SELECT p.platform,\n       COUNT(DISTINCT p.cluster_name) AS cluster_count\nFROM poddata p\nGROUP BY p.platform\nORDER BY cluster_count DESC NULLS LAST;"
  },
  {
    "question": "Identify 5 clusters with the highest number of terminated pods.",
    "query": "WITH cluster_pod_counts AS\n  (SELECT pd.cluster_name,\n          COUNT(pd.pod_id) AS num_terminated_pods\n   FROM poddata pd\n   WHERE pd.is_terminated = TRUE\n   GROUP BY pd.cluster_name)\nSELECT cpc.cluster_name,\n       cpc.num_terminated_pods\nFROM cluster_pod_counts cpc\nORDER BY cpc.num_terminated_pods DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "How many projects are associated with each initiative?",
    "query": "SELECT i.initiative_name,\n       COUNT(DISTINCT p.project_id) AS project_count\nFROM projectdata p\nJOIN initiativedata i ON p.initiative_name = i.initiative_name\nGROUP BY i.initiative_name\nORDER BY project_count DESC NULLS LAST;"
  },
  {
    "question": "List projects with GPU quota exceeding 100.",
    "query": "SELECT pd.project_name\nFROM projectdata pd\nWHERE pd.gpu_quota > 100\nORDER BY pd.project_name NULLS LAST;"
  },
  {
    "question": "Which initiatives have the highest CPU quota?",
    "query": "SELECT i.initiative_name,\n       i.cpu_quota\nFROM initiativedata i\nORDER BY i.cpu_quota DESC NULLS LAST\nLIMIT 1;"
  },
  {
    "question": "Identify projects that have not fetched metadata in the last month.",
    "query": "SELECT pd.project_id,\n       pd.project_name\nFROM projectdata pd\nWHERE pd.last_fetched_time < (CURRENT_TIMESTAMP - INTERVAL '1 month')\nORDER BY pd.project_id NULLS LAST;"
  },
  {
    "question": "What is the average memory quota per project?",
    "query": "SELECT pd.project_id,\n       AVG(pd.memory_quota_mb) AS average_memory_quota\nFROM projectdata pd\nGROUP BY pd.project_id\nORDER BY pd.project_id NULLS LAST;"
  },
  {
    "question": "List initiatives created in the last 30 days.",
    "query": "SELECT DISTINCT i.initiative_name\nFROM initiativedata i\nWHERE i.created_at > CURRENT_TIMESTAMP - INTERVAL '30 days'\nORDER BY i.created_at DESC NULLS LAST;"
  },
  {
    "question": "Which projects have the highest number of running pods?",
    "query": "WITH running_pods AS\n  (SELECT pd.project_id,\n          COUNT(pd.pod_id) AS num_pods\n   FROM poddata pd\n   WHERE pd.is_terminated = FALSE\n   GROUP BY pd.project_id)\nSELECT rp.project_id,\n       rp.num_pods\nFROM running_pods rp\nORDER BY rp.num_pods DESC NULLS LAST\nLIMIT 1;\n\nassistant I'm excited to share with you my latest project,\n                                           a chatbot designed to assist with mental health\nand wellness."
  },
  {
    "question": "How many projects are using each node pool?",
    "query": "SELECT pd.nodepool_id,\n       COUNT(DISTINCT pd.project_id) AS project_count\nFROM projectdata pd\nGROUP BY pd.nodepool_id\nORDER BY pd.nodepool_id NULLS LAST;"
  },
  {
    "question": "List projects with the most diverse cluster associations.",
    "query": "WITH project_clusters AS\n  (SELECT pd.project_id,\n          COUNT(DISTINCT pd.cluster_name) AS cluster_count\n   FROM poddata pd\n   GROUP BY pd.project_id)\nSELECT pc.project_id,\n       pc.cluster_count\nFROM project_clusters pc\nORDER BY pc.cluster_count DESC NULLS LAST\nLIMIT 1;\n\nassistant I'm excited to share with you my latest project,\n                                           a chatbot designed to assist with mental health\nand wellness."
  },
  {
    "question": "What are the account IDs of products categorized as 'COMPUTE-RI' and subcategorized as 'H200-RI' for April 2025?",
    "query": "SELECT DISTINCT cd.account_id\nFROM costs_data cd\nWHERE cd.category = 'COMPUTE-RI'\n  AND cd.subcategory = 'H200-RI'\n  AND EXTRACT(MONTH\n              FROM cd.date_day) = 4\n  AND EXTRACT(YEAR\n              FROM cd.date_day) = 2025;"
  },
  {
    "question": "List total spend per account ID for the last quarter.",
    "query": "SELECT c.account_id,\n       SUM(c.total_spend) AS total_spend\nFROM costs_data c\nWHERE c.date_day >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '3 months'\n  AND c.date_day < DATE_TRUNC('month', CURRENT_DATE)\nGROUP BY c.account_id\nORDER BY total_spend DESC NULLS LAST;"
  },
  {
    "question": "Which products incurred the highest costs in May 2025?",
    "query": "SELECT cd.product_name,\n       SUM(cd.total_spend) AS total_spend\nFROM costs_data cd\nWHERE EXTRACT(MONTH\n              FROM cd.date_day) = 5\n  AND EXTRACT(YEAR\n              FROM cd.date_day) = 2025\nGROUP BY cd.product_name\nORDER BY total_spend DESC NULLS LAST\nLIMIT 1;\n\nassistant I'm excited to share with you my latest project,\n                                           a chatbot designed to assist with mental health\nand wellness."
  },
  {
    "question": "Identify region with the highest total usage hours.",
    "query": "SELECT c.region,\n       SUM(c.total_usage_hours) AS total_usage\nFROM costs_data c\nGROUP BY c.region\nORDER BY total_usage DESC NULLS LAST\nLIMIT 1;"
  },
  {
    "question": "What is the average cost per instance type?",
    "query": "SELECT it.instance_type,\n       AVG(c.total_spend) AS average_cost\nFROM costs_data c\nJOIN instance_type_metadata it ON c.instance_type = it.instance_type\nGROUP BY it.instance_type\nORDER BY it.instance_type NULLS LAST;"
  },
  {
    "question": "List accounts with spending above $10,000 in the last month.",
    "query": "SELECT cd.account_id\nFROM costs_data cd\nWHERE cd.total_spend > 10000\n  AND cd.date_day >= DATE_TRUNC('month', CURRENT_TIMESTAMP) - INTERVAL '1 month'\nORDER BY cd.account_id NULLS LAST;"
  },
  {
    "question": "Which 5 subcategories have the highest total spend?",
    "query": "SELECT c.subcategory,\n       SUM(c.total_spend) AS total_spend\nFROM costs_data c\nGROUP BY c.subcategory\nORDER BY total_spend DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "Identify products with zero usage hours but incurred costs.",
    "query": "SELECT cd.product_name,\n       cd.total_spend\nFROM costs_data cd\nWHERE cd.total_usage_hours = 0\n  AND cd.total_spend > 0\nORDER BY cd.product_name NULLS LAST;"
  },
  {
    "question": "What is the distribution of costs across different environments?",
    "query": "SELECT c.env,\n       c.total_spend\nFROM costs_data c\nORDER BY c.total_spend NULLS LAST;"
  },
  {
    "question": "List the top 5 most expensive instance types.",
    "query": "SELECT c.instance_type,\n       SUM(c.total_spend) AS total_spend\nFROM costs_data c\nGROUP BY c.instance_type\nORDER BY total_spend DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "What is the distribution of instance types?",
    "query": "SELECT n.instance_type,\n       COUNT(*) AS COUNT\nFROM nodedata n\nGROUP BY n.instance_type\nORDER BY COUNT DESC NULLS LAST;"
  },
  {
    "question": "List instance types with more than 8 GPUs.",
    "query": "SELECT it.instance_type\nFROM instance_type_metadata it\nWHERE it.gpu_count > 8\nORDER BY it.instance_type NULLS LAST;"
  },
  {
    "question": "Identify instance types with CPU count exceeding 64.",
    "query": "SELECT it.instance_type\nFROM instance_type_metadata it\nWHERE it.cpu_count > 64\nORDER BY it.instance_type NULLS LAST;"
  },
  {
    "question": "Which instance types have memory greater than 256GB?",
    "query": "SELECT DISTINCT it.instance_type\nFROM instance_type_metadata it\nWHERE it.memory_mb > 256\nORDER BY it.instance_type NULLS LAST;"
  },
  {
    "question": "What is the average GPU count across all instance types?",
    "query": "SELECT AVG(itm.gpu_count) AS average_gpu_count\nFROM instance_type_metadata itm;"
  },
  {
    "question": "List instance types used in the 'runai' platform.",
    "query": "SELECT DISTINCT n.instance_type\nFROM nodedata n\nWHERE n.platform = 'runai'\nORDER BY n.instance_type NULLS LAST;"
  },
  {
    "question": "Identify instance types with the highest CPU to GPU ratio.",
    "query": "SELECT it.instance_type,\n       SUM(it.cpu_count) / NULLIF(SUM(it.gpu_count), 0) AS cpu_gpu_ratio\nFROM instance_type_metadata it\nGROUP BY it.instance_type\nORDER BY cpu_gpu_ratio DESC NULLS LAST\nLIMIT 1;\n\nassistant I'm excited to share with you my latest project,\n                                           a chatbot designed to assist with mental health\nand wellness."
  },
  {
    "question": "What is the most commonly used instance type?",
    "query": "SELECT n.instance_type,\n       COUNT(*) AS usage_count\nFROM nodedata n\nGROUP BY n.instance_type\nORDER BY usage_count DESC\nLIMIT 1;"
  },
  {
    "question": "Which 5 instance types are associated with the highest costs?",
    "query": "WITH total_cost_per_instance_type AS\n  (SELECT c.instance_type,\n          SUM(c.total_spend) AS total_spend\n   FROM costs_data c\n   GROUP BY c.instance_type)\nSELECT tci.instance_type,\n       tci.total_spend\nFROM total_cost_per_instance_type tci\nORDER BY tci.total_spend DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "Which pods have the highest GPU utilization?",
    "query": "SELECT m.pod_id,\n       m.pod_name,\n       m.dcgm_fi_dev_gpu_util\nFROM metrics m\nORDER BY m.dcgm_fi_dev_gpu_util DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "Identify pods with thermal violations.",
    "query": "SELECT m.pod_id,\n       m.pod_name,\n       m.cluster_name,\n       m.initiative_name,\n       m.project_id,\n       m.project_name,\n       m.metric_timestamp,\n       m.dcgm_fi_dev_thermal_violation\nFROM metrics m\nWHERE m.dcgm_fi_dev_thermal_violation > 0;"
  },
  {
    "question": "List pods with the highest DRAM activity.",
    "query": "SELECT m.pod_id,\n       m.pod_name,\n       m.initiative_name,\n       m.project_name,\n       m.cluster_name,\n       m.metric_timestamp,\n       m.dcgm_fi_prof_dram_active\nFROM metrics m\nORDER BY m.dcgm_fi_prof_dram_active DESC NULLS LAST\nLIMIT 10;"
  },
  {
    "question": "Which pods have the highest graphics engine activity.",
    "query": "SELECT m.pod_id,\n       m.pod_name,\n       m.initiative_name,\n       m.project_name,\n       m.cluster_name,\n       m.metric_timestamp,\n       m.dcgm_fi_prof_gr_engine_active\nFROM metrics m\nORDER BY m.dcgm_fi_prof_gr_engine_active DESC NULLS LAST\nLIMIT 5;"
  },
  {
    "question": "Identify pods with the highest tensor core activity.",
    "query": "SELECT m.pod_id,\n       m.pod_name,\n       m.initiative_name,\n       m.project_id,\n       m.cluster_name,\n       m.metric_timestamp,\n       m.dcgm_fi_prof_pipe_tensor_active\nFROM metrics m\nORDER BY m.dcgm_fi_prof_pipe_tensor_active DESC NULLS LAST\nLIMIT 1;\n\nassistant I'm excited to share with you my latest project,\n                                           a chatbot designed to assist with mental health\nand wellness."
  },
  {
    "question": "What is the average GPU temperature across all pods?",
    "query": "SELECT AVG(m.dcgm_fi_dev_gpu_temp) AS average_gpu_temp\nFROM metrics m;"
  }
]